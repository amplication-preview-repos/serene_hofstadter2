/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  BusinessAccount as PrismaBusinessAccount,
} from "@prisma/client";

export class BusinessAccountServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BusinessAccountCountArgs, "select">
  ): Promise<number> {
    return this.prisma.businessAccount.count(args);
  }

  async businessAccounts(
    args: Prisma.BusinessAccountFindManyArgs
  ): Promise<PrismaBusinessAccount[]> {
    return this.prisma.businessAccount.findMany(args);
  }
  async businessAccount(
    args: Prisma.BusinessAccountFindUniqueArgs
  ): Promise<PrismaBusinessAccount | null> {
    return this.prisma.businessAccount.findUnique(args);
  }
  async createBusinessAccount(
    args: Prisma.BusinessAccountCreateArgs
  ): Promise<PrismaBusinessAccount> {
    return this.prisma.businessAccount.create(args);
  }
  async updateBusinessAccount(
    args: Prisma.BusinessAccountUpdateArgs
  ): Promise<PrismaBusinessAccount> {
    return this.prisma.businessAccount.update(args);
  }
  async deleteBusinessAccount(
    args: Prisma.BusinessAccountDeleteArgs
  ): Promise<PrismaBusinessAccount> {
    return this.prisma.businessAccount.delete(args);
  }
}
